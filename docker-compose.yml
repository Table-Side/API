version: "3.8"

services:
  # Frontdoor
  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      - APISIX_HOST
      - APISIX_PORT
      - DOMAIN
      - LE_EMAIL
      - LE_OPTIONS
      - LE_RENEW_OPTIONS
      - LE_RENEW_CRON_COMMAND
    env_file: .env
    depends_on:
      - apisix
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      - apisix
    volumes:
      - reverse-proxy-nginx-data:/etc/letsencrypt
  apisix:
    image: apache/apisix:latest
    environment:
      - APISIX_STAND_ALONE=true
    restart: always
    networks:
      - app-network
      - apisix
    volumes:
      - ./conf/apisix/config.yaml:/usr/local/apisix/conf/config.yaml
      - ./conf/apisix/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro
      - ./scripts/apisix/guid-verify.lua:/usr/local/apisix/scripts/guid-verify.lua:ro

  # Application Database
  database:
    image: ghcr.io/table-side/database:main
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_USERS_USER
      - POSTGRES_USERS_PASSWORD
      - POSTGRES_USERS_DB
      - POSTGRES_KITCHEN_USER
      - POSTGRES_KITCHEN_PASSWORD
      - POSTGRES_KITCHEN_DB
      - POSTGRES_ORDER_USER
      - POSTGRES_ORDER_PASSWORD
      - POSTGRES_ORDER_DB
      - POSTGRES_RESTAURANT_USER
      - POSTGRES_RESTAURANT_PASSWORD
      - POSTGRES_RESTAURANT_DB
    env_file: .env
    networks:
      - app-network
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    env_file: .env
    networks:
      - app-network
    ports:
      - "5080:80"
  
  # Application Services
  restaurant:
    image: ghcr.io/table-side/restaurant:main
    depends_on:
      - database
    networks:
      - app-network
  order:
    image: ghcr.io/table-side/order:main
    depends_on:
      - database
      - restaurant
    networks:
      - app-network
  kitchen:
    image: ghcr.io/table-side/kitchen:main
    depends_on:
      - database
      - restaurant
      - order
    networks:
      - app-network

volumes:
  reverse-proxy-nginx-data:

networks:
  apisix:
    driver: bridge
  app-network:
    driver: bridge
  