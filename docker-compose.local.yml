version: "3.8"

services:
  apisix:
    build: 
      context: ./apisix
      dockerfile: Dockerfile
    environment:
      - APISIX_STAND_ALONE=true
    restart: unless-stopped
    networks:
      - app
    ports:
      - "9080:80"
      - "9443:443"
    volumes:
      - ./apisix/conf/config.yaml:/usr/local/apisix/conf/config.yaml:rw
      - ./apisix/conf/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro
      - ./apisix/conf/debug.yaml:/usr/local/apisix/conf/debug.yaml:ro
      - ./apisix/scripts/guid-verify.lua:/usr/local/apisix/scripts/guid-verify.lua
  database:
    build: 
      context: ./app-database
      dockerfile: Dockerfile
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_RESTAURANT_USER
      - POSTGRES_RESTAURANT_PASSWORD
      - POSTGRES_RESTAURANT_DB
      - POSTGRES_ORDER_USER
      - POSTGRES_ORDER_PASSWORD
      - POSTGRES_ORDER_DB
      - POSTGRES_KITCHEN_USER
      - POSTGRES_KITCHEN_PASSWORD
      - POSTGRES_KITCHEN_DB
    env_file: .env
    networks:
      - app
      - app-db
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    env_file: .env
    networks:
      - app-db
    ports:
      - "5080:3010"

  # Application Services
  restaurant:
    image: ghcr.io/table-side/restaurant:main
    depends_on:
      - database
    networks:
      - app
    restart: unless-stopped
    ports:
      - "3010:3000"
  order:
    image: ghcr.io/table-side/order:main
    depends_on:
      - database
      - restaurant
    networks:
      - app
    restart: unless-stopped
    ports:
      - "3020:3000"
  kitchen:
    image: ghcr.io/table-side/kitchen:main
    depends_on:
      - database
      - restaurant
      - order
    networks:
      - app
    restart: unless-stopped
    ports:
      - "3030:3000"

networks:
  app:
    driver: bridge
  app-db:
    driver: bridge
  