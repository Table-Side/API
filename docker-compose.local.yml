version: "3.8"

services:
  database:
    build: 
      context: ./app-database
      dockerfile: Dockerfile
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_RESTAURANT_USER
      - POSTGRES_RESTAURANT_PASSWORD
      - POSTGRES_RESTAURANT_DB
      - POSTGRES_ORDER_USER
      - POSTGRES_ORDER_PASSWORD
      - POSTGRES_ORDER_DB
      - POSTGRES_KITCHEN_USER
      - POSTGRES_KITCHEN_PASSWORD
      - POSTGRES_KITCHEN_DB
    env_file: .env
    networks:
      - app
      - app-db
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    env_file: .env
    networks:
      - app-db
    ports:
      - "5080:5080"

  # Application Services
  restaurant:
    build: 
      context: ../restaurant
      dockerfile: Dockerfile
    depends_on:
      - database
    networks:
      - app
    restart: unless-stopped
    ports: "3000:3001"
  order:
    build: 
      context: ../order
      dockerfile: Dockerfile
    depends_on:
      - database
      - restaurant
    networks:
      - app
    restart: unless-stopped
    ports: "3000:3002"
  kitchen:
    build: 
      context: ../kitchen
      dockerfile: Dockerfile
    depends_on:
      - database
      - restaurant
      - order
    networks:
      - app
    restart: unless-stopped
    ports: "3000:3003"

networks:
  app:
    driver: bridge
  app-db:
    driver: bridge
  